[General]
network = extServer

warnings = true
sim-time-limit = 60s

scheduler-class = "cSocketRTScheduler" # needed for externalInterface
cmdenv-express-mode = true

cmdenv-module-messages = true # for normal (non-express) mode only
cmdenv-event-banners = true   # for normal (non-express) mode only

tkenv-plugin-path = ../../../etc/plugins

#
# Network specific settings
#

# set inet_addr, Mask, MTU ( = 1500), default route (=router1)
**.client1.routingFile = "client1.mrt"
**.router1.routingFile = "router1.mrt"
**.server1.routingFile = "server1.mrt"

# ip settings
**.ip.procDelay = 0s
**.IPForward = false

# ARP settings
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
**.networkLayer.proxyARP = true  # Host's is hardwired "false"

# nam trace
**.namid = -1  # auto

# NIC settings
**.ppp[*].queueType = "DropTailQueue" # alternatives: REDQueue or DropTailQoSQueue
**.ppp[*].queue.frameCapacity = 100 # packets

# tcp apps - client 1
**.client1.numTcpApps = 1
**.client1.tcpAppType = "TCPSessionApp"        # FTP works with TCPVirtualBytesSendQueue/RcvQueue as sendQueue/receiveQueue
**.client1.tcpApp[*].sendBytes = 100MB
**.client1.tcpApp[*].active = true
**.client1.tcpApp[*].address = "172.0.0.1"
**.client1.tcpApp[*].port = 10020
**.client1.tcpApp[*].connectAddress = "192.168.0.111" # 192.168.0.111 = external server
**.client1.tcpApp[*].connectPort = 10021
**.client1.tcpApp[*].tOpen = 0s
**.client1.tcpApp[*].tSend = 0s
**.client1.tcpApp[*].tClose = 0s
**.client1.tcpApp[*].sendScript = ""

# tcp apps - server 1
**.server1.numTcpApps = 1
**.server1.tcpAppType = "TCPSinkApp"
**.server1.tcpApp[*].address = "172.0.1.111"
**.server1.tcpApp[*].port = 10021

# tcp settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = true                     # delayed ACKs enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false				 # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false		 			 # increased initial window (min(4*MSS, max (2*MSS, 4380 bytes))) (RFC 3390) enabled/disabled
**.tcp.sackSupport = true                            # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # maximum segment size (header option)
**.tcp.tcpAlgorithmClass = "TCPReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.sendQueueClass = "TCPVirtualDataSendQueue"    # TCPVirtualDataSendQueue/TCPMsgBasedSendQueue
**.tcp.receiveQueueClass = "TCPVirtualDataRcvQueue"  # TCPVirtualDataRcvQueue/TCPMsgBasedRcvQueue
**.tcp.recordStats = true                            # recording of seqNum etc. into output vectors enabled/disabled

# tcpdump
**.client1.tcpdump.dumpFile="client1.pcap"           # needed for dumpFile
**.server1.tcpdump.dumpFile="server1.pcap"           # needed for dumpFile

# extInt
**.ext[0].filterString = "ip and dst host 172.0" # 172.0.0.1 = client1 172.0.1.111 = server1
**.ext[0].device = "eth0"
**.ext[0].mtu = 1500

#
# Config specific settings
#

[Config Uplink_Traffic]
description = "Hybrid Network - Uplink Traffic"

# tcp apps - client 1
**.client1.numTcpApps = 1
**.client1.tcpAppType = "TCPSessionApp"        # FTP works with TCPVirtualBytesSendQueue/RcvQueue as sendQueue/receiveQueue
**.client1.tcpApp[*].sendBytes = 100MB
**.client1.tcpApp[*].connectAddress = "192.168.0.111" # 192.168.0.111 = external server

# tcp apps - server 1 (off)
**.server1.numTcpApps = 0

**.client1.tcpdump.dumpFile="client1.pcap"
**.server1.tcpdump.dumpFile=""

[Config Downlink_Traffic]
description = "Hybrid Network - Downlink Traffic"

# tcp apps - client 1 (off)
**.client1.numTcpApps = 0

# tcp apps - server 1
**.server1.numTcpApps = 1
**.server1.tcpAppType = "TCPSinkApp"
**.server1.tcpApp[*].address = "172.0.1.111"
**.server1.tcpApp[*].port = 10021

**.ext[0].filterString = "ip and dst host 172.0.1.111" # 172.0.1.111 = server1
**.ext[0].device = "eth0"

**.client1.tcpdump.dumpFile=""
**.server1.tcpdump.dumpFile="server1.pcap"

[Config Uplink_and_Downlink_Traffic]
description = "Hybrid Network - Uplink and Downlink Traffic"

# tcp apps - client 1
**.client1.numTcpApps = 1
**.client1.tcpAppType = "TCPSessionApp"        # FTP works with TCPVirtualBytesSendQueue/RcvQueue as sendQueue/receiveQueue
**.client1.tcpApp[*].sendBytes = 100MB
**.client1.tcpApp[*].connectAddress = "192.168.0.111" # 192.168.0.111 = external server

# tcp apps - server 1
**.server1.numTcpApps = 1
**.server1.tcpAppType = "TCPSinkApp"
**.server1.tcpApp[*].address = "172.0.1.111"
**.server1.tcpApp[*].port = 10021

**.ext[0].filterString = "ip and dst host 172.0" # 172.0.0.1 = client1 172.0.1.111 = server1
**.ext[0].device = "eth0"

**.client1.tcpdump.dumpFile="client1.pcap"
**.server1.tcpdump.dumpFile="server1.pcap"
