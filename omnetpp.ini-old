[General]
#preload-ned-files = *.ned @nedfiles.lst
ned-path = ipv6;util;wimax

network = physim
cpu-time-limit = 9600s
sim-time-limit = 200s

# cmdenv-runs-to-execute = 1,2,3,4,5,6,7,8,9,10
#cmdenv-runs-to-execute = 1
cmdenv-express-mode = true
cmdenv-module-messages = false
cmdenv-event-banners = false

# cmdenv-runs-to-execute = 1
cmdenv-event-banners = true

# General loglevel for the whole sim
physim.LogLevel = 6

physim.SS[*].NetworkEntryTime = 0.1
physim.SS[*].HandoverTime = 3

physim.numBS = 3
physim.numSS = 4

physim.BS[*].bsIPv6.raGen.RaInterval = 0.030
physim.BS[0].bsIPv6.DHCPv6Srv.preference = 0
physim.BS[1].bsIPv6.DHCPv6Srv.preference = 1
physim.BS[2].bsIPv6.DHCPv6Srv.preference = 2
physim.BS[3].bsIPv6.DHCPv6Srv.preference = 3
physim.BS[4].bsIPv6.DHCPv6Srv.preference = 4
physim.BS[*].bsIPv6.DHCPv6Srv.MinDelayAdvertise = 0.010
physim.BS[*].bsIPv6.DHCPv6Srv.MaxDelayAdvertise = 0.050
physim.BS[*].bsIPv6.DHCPv6Srv.MinDelayReply = 0.030
physim.BS[*].bsIPv6.DHCPv6Srv.MaxDelayReply = 0.080
physim.BS[*].bsIPv6.DHCPv6Srv.MinDelayRelay = 0.060
physim.BS[*].bsIPv6.DHCPv6Srv.MaxDelayRelay = 0.100

physim.BS[*].bsMac.WMaxCtrlBS.MinDelayCdma = 0.005
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelayCdma = 0.005
physim.BS[*].bsMac.WMaxCtrlBS.MinDelayRng = 0.020
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelayRng = 0.040
physim.BS[*].bsMac.WMaxCtrlBS.MinDelaySbc = 0.010
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelaySbc = 0.030
physim.BS[*].bsMac.WMaxCtrlBS.MinDelaySaTek = 0.100
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelaySaTek = 0.200
physim.BS[*].bsMac.WMaxCtrlBS.MinDelayScn = 0.020
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelayScn = 0.040
physim.BS[*].bsMac.WMaxCtrlBS.MinDelayReg = 0.030
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelayReg = 0.060
physim.BS[*].bsMac.WMaxCtrlBS.MinDelayHoRsp = 0.050
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelayHoRsp = 0.080
physim.BS[*].bsMac.WMaxCtrlBS.MinDelayDsxRvd = 0.005
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelayDsxRvd = 0.010
physim.BS[*].bsMac.WMaxCtrlBS.MinDelayDsxRsp = 0.050
physim.BS[*].bsMac.WMaxCtrlBS.MaxDelayDsxRsp = 0.100

physim.SS[*].ssMac.ssMac.FrameLength = 0.005
physim.BS[*].bsMac.bsMac.FrameLength = 0.005

physim.internet.MinDelay = 0.015
physim.internet.MaxDelay = 0.200

# connection type: 2 - BE, 6 - UGS (see TLV 145.11 in 802.16-2004)
physim.SS[*].connType = 2
physim.SS[*].connMsr = 10

# 1 - bursted trunc normal, 2 - beta
physim.SS[*].ssIPv6.MNode.TrafficType = 2
physim.SS[*].ssIPv6.MNode.BurstInterval = 0.0111
physim.SS[*].ssIPv6.MNode.BurstSize = 1
physim.SS[*].ssIPv6.MNode.BurstPacketSize = 1500
physim.SS[*].ssIPv6.MNode.InitialDelay = 1.5

# 1 - bursted trunc normal, 2 - beta
physim.CN[*].CNode.TrafficType = 1
physim.CN[*].CNode.BurstInterval = 0.012
physim.CN[*].CNode.BurstSize = 3
physim.CN[*].CNode.BurstPacketSize = 512
physim.CN[*].CNode.InitialDelay = 1.5

# === BS parameters ===
physim.BS[0].x = 100
physim.BS[0].y = 200
physim.BS[1].x = 150
physim.BS[1].y = 200
physim.BS[2].x = 200
physim.BS[2].y = 200
physim.BS[3].x = 250
physim.BS[3].y = 200

# "move right" related params:
# physim.SS[0].x = 50
# physim.SS[0].y = 50
# physim.SS[1].x = 150
# physim.SS[1].y = 50
# physim.SS[2].x = 250
# physim.SS[2].y = 50
# physim.SS[3].x = 350
# physim.SS[3].y = 50
# physim.SS[4].x = 450
# physim.SS[4].y = 50
# physim.SS[5].x = 800
# physim.SS[5].y = 50
physim.SS[*].x = 0
physim.SS[*].y = 50

# "move around circle" related params:
physim.SS[*].SStrace_centerx = 200
physim.SS[*].SStrace_centery = 200
physim.SS[*].SStrace_radius = 100
physim.SS[*].SStrace_step = 0.02

# Mobile stations (model used for mobility simulation)
# 0 - fixed station
# 1 - handover executed after certain timeout (next BS)
# 2 - simulated SS movement
# 3 - handover executed after certain timeout (random BS)
physim.SS[0..18].wmaxIsMobile = 3
physim.SS[19..].wmaxIsMobile = 0

# Fixed stations:
physim.SS[0..1].initialBS = 0
physim.SS[2..4].initialBS = 1
physim.SS[5..12].initialBS = 2
physim.SS[13..20].initialBS = 3

#Mobile (simulated SS movement):
# Mobile station movement type:
# 0 - move right
# 1 - move around circle
physim.SS[*].movementType = 0

physim.SS[*].ssIPv6.DHCPv6Cli.nextIP = ""

physim.SS[0].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[0].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[0].ssIPv6.mobIPv6mn.corrIP = "3000::1"

physim.SS[1].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[1].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[1].ssIPv6.mobIPv6mn.corrIP = "3001::1"

physim.SS[2].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[2].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[2].ssIPv6.mobIPv6mn.corrIP = "3002::1"

physim.SS[3].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[3].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[3].ssIPv6.mobIPv6mn.corrIP = "3003::1"

physim.SS[4].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[4].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[4].ssIPv6.mobIPv6mn.corrIP = "3004::1"

physim.SS[5].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[5].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[5].ssIPv6.mobIPv6mn.corrIP = "3005::1"

physim.SS[6].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[6].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[6].ssIPv6.mobIPv6mn.corrIP = "3006::1"

physim.SS[7].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[7].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[7].ssIPv6.mobIPv6mn.corrIP = "3007::1"

physim.SS[8].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[8].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[8].ssIPv6.mobIPv6mn.corrIP = "3008::1"

physim.SS[9].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[9].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[9].ssIPv6.mobIPv6mn.corrIP = "3009::1"

physim.SS[10].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[10].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[10].ssIPv6.mobIPv6mn.corrIP = "300a::1"

physim.SS[11].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[11].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[11].ssIPv6.mobIPv6mn.corrIP = "300b::1"

physim.SS[12].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[12].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[12].ssIPv6.mobIPv6mn.corrIP = "300c::1"

physim.SS[13].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[13].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[13].ssIPv6.mobIPv6mn.corrIP = "300d::1"

physim.SS[14].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[14].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[14].ssIPv6.mobIPv6mn.corrIP = "300e::1"

physim.SS[15].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[15].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[15].ssIPv6.mobIPv6mn.corrIP = "300f::1"

physim.SS[16].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[16].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[16].ssIPv6.mobIPv6mn.corrIP = "3010::1"

physim.SS[17].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[17].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[17].ssIPv6.mobIPv6mn.corrIP = "3011::1"

physim.SS[18].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[18].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[18].ssIPv6.mobIPv6mn.corrIP = "3012::1"

physim.SS[19].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[19].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[19].ssIPv6.mobIPv6mn.corrIP = "3013::1"

physim.SS[20].ssIPv6.mobIPv6mn.prefix = ""
physim.SS[20].ssIPv6.mobIPv6mn.myIP = "::"
physim.SS[20].ssIPv6.mobIPv6mn.corrIP = "3014::1"

physim.CN[0].mobIPv6cn.prefix = "3000::"
physim.CN[0].mobIPv6cn.myIP = "3000::1"
physim.CN[0].mobIPv6cn.corrIP = "::"

physim.CN[1].mobIPv6cn.prefix = "3001::"
physim.CN[1].mobIPv6cn.myIP = "3001::1"
physim.CN[1].mobIPv6cn.corrIP = "::"

physim.CN[2].mobIPv6cn.prefix = "3002::"
physim.CN[2].mobIPv6cn.myIP = "3002::1"
physim.CN[2].mobIPv6cn.corrIP = "::"

physim.CN[3].mobIPv6cn.prefix = "3003::"
physim.CN[3].mobIPv6cn.myIP = "3003::1"
physim.CN[3].mobIPv6cn.corrIP = "::"

physim.CN[4].mobIPv6cn.prefix = "3004::"
physim.CN[4].mobIPv6cn.myIP = "3004::1"
physim.CN[4].mobIPv6cn.corrIP = "::"

physim.CN[5].mobIPv6cn.prefix = "3005::"
physim.CN[5].mobIPv6cn.myIP = "3005::1"
physim.CN[5].mobIPv6cn.corrIP = "::"

physim.CN[6].mobIPv6cn.prefix = "3006::"
physim.CN[6].mobIPv6cn.myIP = "3006::1"
physim.CN[6].mobIPv6cn.corrIP = "::"

physim.CN[7].mobIPv6cn.prefix = "3007::"
physim.CN[7].mobIPv6cn.myIP = "3007::1"
physim.CN[7].mobIPv6cn.corrIP = "::"

physim.CN[8].mobIPv6cn.prefix = "3008::"
physim.CN[8].mobIPv6cn.myIP = "3008::1"
physim.CN[8].mobIPv6cn.corrIP = "::"

physim.CN[9].mobIPv6cn.prefix = "3009::"
physim.CN[9].mobIPv6cn.myIP = "3009::1"
physim.CN[9].mobIPv6cn.corrIP = "::"

physim.CN[10].mobIPv6cn.prefix = "300a::"
physim.CN[10].mobIPv6cn.myIP = "300a::1"
physim.CN[10].mobIPv6cn.corrIP = "::"

physim.CN[11].mobIPv6cn.prefix = "300b::"
physim.CN[11].mobIPv6cn.myIP = "300b::1"
physim.CN[11].mobIPv6cn.corrIP = "::"

physim.CN[12].mobIPv6cn.prefix = "300c::"
physim.CN[12].mobIPv6cn.myIP = "300c::1"
physim.CN[12].mobIPv6cn.corrIP = "::"

physim.CN[13].mobIPv6cn.prefix = "300d::"
physim.CN[13].mobIPv6cn.myIP = "300d::1"
physim.CN[13].mobIPv6cn.corrIP = "::"

physim.CN[14].mobIPv6cn.prefix = "300e::"
physim.CN[14].mobIPv6cn.myIP = "300e::1"
physim.CN[14].mobIPv6cn.corrIP = "::"

physim.CN[15].mobIPv6cn.prefix = "300f::"
physim.CN[15].mobIPv6cn.myIP = "300f::1"
physim.CN[15].mobIPv6cn.corrIP = "::"

physim.CN[16].mobIPv6cn.prefix = "3010::"
physim.CN[16].mobIPv6cn.myIP = "3010::1"
physim.CN[16].mobIPv6cn.corrIP = "::"

physim.CN[17].mobIPv6cn.prefix = "3011::"
physim.CN[17].mobIPv6cn.myIP = "3011::1"
physim.CN[17].mobIPv6cn.corrIP = "::"

physim.CN[18].mobIPv6cn.prefix = "3012::"
physim.CN[18].mobIPv6cn.myIP = "3012::1"
physim.CN[18].mobIPv6cn.corrIP = "::"

physim.CN[19].mobIPv6cn.prefix = "3013::"
physim.CN[19].mobIPv6cn.myIP = "3013::1"
physim.CN[19].mobIPv6cn.corrIP = "::"

physim.BS[0].bsIPv6.mobIPv6ha.prefix = "2000::"
physim.BS[0].bsIPv6.DHCPv6Srv.prefix = "2000::"
physim.BS[1].bsIPv6.mobIPv6ha.prefix = "2001::"
physim.BS[1].bsIPv6.DHCPv6Srv.prefix = "2001::"
physim.BS[2].bsIPv6.mobIPv6ha.prefix = "2002::"
physim.BS[2].bsIPv6.DHCPv6Srv.prefix = "2002::"
physim.BS[3].bsIPv6.mobIPv6ha.prefix = "2003::"
physim.BS[3].bsIPv6.DHCPv6Srv.prefix = "2003::"
physim.BS[4].bsIPv6.mobIPv6ha.prefix = "2004::"
physim.BS[4].bsIPv6.DHCPv6Srv.prefix = "2004::"
physim.BS[5].bsIPv6.mobIPv6ha.prefix = "2005::"
physim.BS[5].bsIPv6.DHCPv6Srv.prefix = "2005::"
physim.BS[6].bsIPv6.mobIPv6ha.prefix = "2006::"
physim.BS[6].bsIPv6.DHCPv6Srv.prefix = "2006::"


# this section defines, if particular values (i.e. vectors) should be logged or not
#**.*Pkt size.vector-recording = true
#**.vector-recording = false

**.Dropped msgs.vector-recording = false
#**.ssIpv6.ssIPv6 Sent Packets.vector-recording = true
#**.ssIPv6 Sent Bytes.vector-recording = true
#**.ssIPv6 Received Packets.vector-recording = true
#**.ssIPv6 Received Bytes.vector-recording = true
#**.bsIPv6 Sent Packets.vector-recording = false
#**.bsIPv6 Sent Bytes.vector-recording = false
#**.bsIPv6 Received Packets.vector-recording = false
#**.bsIPv6 Received Bytes.vector-recording = false


[Config config1]
description = "No optimization"
output-vector-file = run1.vec

physim.SS[*].wmaxHoOptim = 0 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = false
physim.SS[*].dhcpRemoteAutoconf = false
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = false
physim.SS[*].dhcpRapidCommit = false
physim.SS[*].dadType = 0 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

physim.SS[*].HandoverTime = 4

[Config config2]
description = "WiMAX optim"
output-vector-file = run2.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = false
physim.SS[*].dhcpRemoteAutoconf = false
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = false
physim.SS[*].dhcpRapidCommit = false
physim.SS[*].dadType = 0 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config3]
description = "Skip initial DHCPv6 delay"
output-vector-file = run3.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = false
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = false
physim.SS[*].dhcpRapidCommit = false
physim.SS[*].dadType = 0 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config4]
description = "DHCPv6 Preference 255"
output-vector-file = run4.vec


physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = false
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = true
physim.SS[*].dhcpRapidCommit = false
physim.SS[*].dadType = 0 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config5]
description = "DHCPv6 Rapid commit"
output-vector-file = run5.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = false
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = true
physim.SS[*].dhcpRapidCommit = true
physim.SS[*].dadType = 0 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config6]
description = "IPv6 Skip DAD"
output-vector-file = run6.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = false
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = true
physim.SS[*].dhcpRapidCommit = true
physim.SS[*].dadType = 1 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config7]
description = "IPv6 Server side DAD"
output-vector-file = run7.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = false
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = true
physim.SS[*].dhcpRapidCommit = true
physim.SS[*].dadType = 2 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config8]
description = "Remote autoconf"
output-vector-file = run8.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = true
physim.SS[*].dhcpAddrParams = false
physim.SS[*].dhcpPref255 = true
physim.SS[*].dhcpRapidCommit = true
physim.SS[*].dadType = 2 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config9]
description = "Address params"
output-vector-file = run9.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = true
physim.SS[*].dhcpAddrParams = true
physim.SS[*].dhcpPref255 = true
physim.SS[*].dhcpRapidCommit = true
physim.SS[*].dadType = 2 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = false

[Config config10]
description = "Remote Mobile IPv6"
output-vector-file = run10.vec

physim.SS[*].wmaxHoOptim = 16383 # 16383 (max. optimized), 16254:(SBC-REQ, REG-REQ enabled), 0 (full network entry)
physim.SS[*].dhcpSkipInitialDelay = true
physim.SS[*].dhcpRemoteAutoconf = true
physim.SS[*].dhcpAddrParams = true
physim.SS[*].dhcpPref255 = true
physim.SS[*].dhcpRapidCommit = true
physim.SS[*].dadType = 2 # dad mode 0 - normal DAD, 1 - no DAD at all, 2 - server side, 3 - optimistic
physim.SS[*].mipRemoteLocUpdate = true

# FOLLOWING SECTION MOVED UP TO [General] section (MiM)
#[General]
# this section defines, if particular values (i.e. vectors) should be logged or not
#**.*Pkt size.vector-recording = true
#**.vector-recording = false

#**.Dropped msgs.vector-recording = false
#**.ssIpv6.ssIPv6 Sent Packets.vector-recording = true
#**.ssIPv6 Sent Bytes.vector-recording = true
#**.ssIPv6 Received Packets.vector-recording = true
#**.ssIPv6 Received Bytes.vector-recording = true
#**.bsIPv6 Sent Packets.vector-recording = false
#**.bsIPv6 Sent Bytes.vector-recording = false
#**.bsIPv6 Received Packets.vector-recording = false
#**.bsIPv6 Received Bytes.vector-recording = false
